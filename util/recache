#!/bin/bash
set -ex

# check version of install-node
install_v=$(node -e "console.log(($(cat $(dirname $0)/../package.json)).version.split('.')[0])")

main_file="$(dirname $0)/../bin/install_node"
version_file="$(dirname $0)/../cache/v${install_v}/node-versions"
versions=( $(cat "$version_file") )
dest="s3://mapbox/vendor/nodejs"
apps_dest="s3://mapbox/apps/install-node"
tmp=$(mktemp -d -t install-node.XXXXXX)
gitsha=$(cd $(dirname $0)  && git rev-parse HEAD)

function cachefile() {
    local filename=$1
    local localname=$(echo $1 | tr '/' '-')
    local nv=$2

    if wget -q -O $localname "https://nodejs.org/dist/v$nv/$filename"; then
        md5sum "$localname" > "$localname.md5"
    else
        echo "$filename not found at https://nodejs.org/dist/v$nv/$filename" && return 0
    fi

    # RHEL/centos7 does not ship with a parent shasum function.
    # Fallback to sha1sum if not found.
    shasum=""
    if which shasum > /dev/null; then
        shasum=$(which shasum)
    elif which sha1sum > /dev/null; then
        shasum=$(which sha1sum)
    fi

    # Check that shasum of tarball is present
    echo "Verifying nodejs shasum"
    if [ ! -z $(echo "$SHASUMFILE" | grep 256) ]; then
        node_shasum="$($shasum -a 256 $localname | grep -oE '^[0-9a-f]+')"
    else
        node_shasum="$($shasum $localname | grep -oE '^[0-9a-f]+')"
    fi
    grep "$node_shasum" "$SHASUMFILE"

    # Check if file already exists on s3
    if aws s3 cp "$dest/v$nv/$filename.md5" "./$localname-online.md5" > /dev/null 2>&1; then
        if md5sum -c $localname-online.md5; then
            echo "$filename unchanged"
            return 0
        fi
    fi

    aws s3 cp --acl public-read "$localname"      "$dest/v$nv/$filename"
    aws s3 cp --acl public-read "$localname.md5"  "$dest/v$nv/$filename.md5"
}

aws s3 cp --acl public-read "$main_file"           $apps_dest/$gitsha/run
aws s3 cp --acl public-read "$version_file"        $apps_dest/cache/v${install_v}/

if git describe --tags --exact-match 2> /dev/null; then
    tag=$(git describe --tags --exact-match)
    aws s3 cp --acl public-read "$main_file" $apps_dest/$tag/run
    # latest major versions tagged always available at /latest/run
    aws s3 cp --acl public-read "$main_file" $apps_dest/latest/run
fi

cd "$tmp"

# Cache node.js packages to S3
for nv in "${versions[@]}"; do
    echo "Caching Node.js v$nv to S3"

    # Verify signed SHASUMS file to ensure it can be trusted
    SHASUMFILE="SHASUMS256.txt"
    if ! wget -q -O $SHASUMFILE "https://nodejs.org/dist/v$nv/$SHASUMFILE"; then
        echo "$SHASUMFILE not found. No SHASUM file found for v$nv, exiting." && exit 1
    fi

    echo "Verifying signature of nodejs $SHASUMFILE"
    sha256sum -c "$SHASUMFILE" --ignore-missing

    cachefile node-v$nv-linux-x64.tar.gz $nv
    cachefile node-v$nv-darwin-x64.tar.gz $nv
    rm ./*
done
